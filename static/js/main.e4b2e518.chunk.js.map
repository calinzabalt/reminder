{"version":3,"sources":["components/App.jsx","actions/index.js","constants.js","reducers/index.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","dueDate","console","log","addReminder","id","deleteReminder","_this2","reminders","react_default","a","createElement","className","map","reminder","key","moment","Date","fromNow","onClick","_this3","placeholder","onChange","event","setState","target","value","type","renderReminders","clearReminders","Component","connect","action","Math","random","arguments","length","undefined","read_cookie","toConsumableArray","concat","bake_cookie","filter","removeById","store","createStore","reducer","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e4b2e518.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addReminder, deleteReminder, clearReminders } from '../actions';\nimport moment from 'moment';\n\nclass App extends Component {\n\nconstructor(props) {\n    super(props);\n    this.state = {\n        text: '',\n        dueDate: '',\n    }\n}\n\n    addReminder() {\n        console.log('this.state.dueDate', this.state.dueDate)\n        this.props.addReminder(this.state.text, this.state.dueDate);\n    }\n\n    deleteReminder(id) {\n        this.props.deleteReminder(id);\n    }\n\n    renderReminders(){\n            const { reminders } = this.props;\n            return(\n                <ul className=\"list-group col-sm-4\">\n                      {\n                          reminders.map(reminder => {\n                            return (\n                             <li key={reminder.id} className=\"list-group-item\">\n                                <div className=\"list-item\">\n                                    <div>{reminder.text}</div>\n                                    <div><em>{moment (new Date(reminder.dueDate)).fromNow()}</em></div>\n                                </div>\n                                    <div className=\"list-item delete-button\" onClick={() => this.deleteReminder(reminder.id)}>\n                                    &#x2715;\n                                </div>\n                            </li>\n                              )\n                      })\n                    }          \n                </ul>\n        )\n    }\n \n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"title\">\n                    Reminder\n                </div>\n                <div className=\"form-inline reminder-form\">\n                    <div className=\"form-group\">\n                        <input\n                            className=\"form-control\"\n                            placeholder=\"I have to...\"\n                            onChange={event => this.setState({text: event.target.value})}\n                        /> \n\n                        <input className=\"form-control\"\n                                type=\"datetime-local\"\n                                onChange={event => this.setState({dueDate: event.target.value})}>                   \n                        </input>\n\n                    </div>\n                   \n                    <button \n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    onClick={() => this.addReminder()}>\n                    Add Reminder\n                    </button>\n                </div>\n                { this.renderReminders() }\n                <div \n                    className=\"btn btn-danger\"\n                    onClick={()=> this.props.clearReminders()}>\n                    Clear Reminders\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    console.log('state', state);\n    return {\n        reminders: state\n    }\n}\n\nexport default connect(mapStateToProps, { addReminder, deleteReminder, clearReminders }) (App);","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from '../constants';\n\nexport const addReminder = (text, dueDate) => {\n    const action = {\n        type: ADD_REMINDER,\n        text,\n        dueDate\n    }\n    console.log('action in addReminder', action);\n    return action;\n}\n\nexport const deleteReminder = (id) => {\n    const action = {\n        type: DELETE_REMINDER,\n        id\n    }\n    console.log('deleting in actions', action);\n    return action;\n}\n\nexport const clearReminders = () => {\n    return {\n        type: CLEAR_REMINDERS\n    }\n}","export const ADD_REMINDER = 'ADD_REMINDER';\nexport const DELETE_REMINDER = 'DELETE_REMINDER';\nexport const CLEAR_REMINDERS = 'CLEAR_REMINDERS';","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDERS } from '../constants';\nimport { bake_cookie, read_cookie } from 'sfcookies';\n\nconst reminder = (action) => {\n    let { text, dueDate } = action;\n    return {\n        id: Math.random(),\n        text,\n        dueDate,\n    }\n}\n\nconst removeById = (state = [], id) => {\n    const reminders = state.filter(reminder => reminder.id !== id );\n    console.log('new reduced reminders', reminders);\n    return reminders;\n}\n\nconst reminders = (state = [], action) => {\n     let reminders = null;\n     state = read_cookie('reminders');\n     switch(action.type) {\n         case ADD_REMINDER:\n         reminders = [...state, reminder(action)];\n         bake_cookie('reminders', reminders);\n         return reminders;\n         case DELETE_REMINDER:\n            reminders = removeById(state, action.id);\n            bake_cookie('reminders', reminders);\n            return reminders;\n            case CLEAR_REMINDERS:\n                reminders = [];\n                bake_cookie('reminders', reminders);\n                return reminders;\n         default: \n         return state;\n     }\n}\n\n\nexport default reminders;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\nimport './index.css';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n<Provider store={store}>   \n<App />\n</Provider>,\ndocument.getElementById('root')\n)"],"sourceRoot":""}